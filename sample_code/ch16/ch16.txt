[printnum.cpp]

#include <iostream>

using namespace std;

void printNum (int num)
{
	// the two calls in this function to cout will sandwich an inner
	// sequence containing the numbers (num+1)...99...(num+1)
	cout << num;
	// While begin is less than 9, we need to recursively print 
	// the sequence for (num+1) ... 99 ... (num+1)
	if ( num < 9 )
	{
		printNum( num + 1 );
	}
	cout << num;    
}

int main ()
{
	printNum( 1 );
}


[infinite_recursion.cpp]

#include <iostream>

using namespace std;

void recurse (int count) // Each call gets its own count
{
	cout << count << "\n";
	// It is not necessary to increment count since each function's
	// variables are separate (so the count in each stack frame will 
	// be initialized one greater than the last count)
	recurse( count + 1 );
}

int main ()
{
	recurse( 1 ); // First function call, so it starts at one        
}


